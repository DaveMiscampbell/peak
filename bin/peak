#!/usr/bin/env node

var Commands = require('../lib/commands')
  , ArgParse = require('argparse').ArgumentParser
  , pkg = require('../package.json');

var Parse = function Parse () {
  var parser = new ArgParse(this.details)
    , subParser = parser.addSubparsers(this.child_details)

    , generate = subParser.addParser('new', { addHelp: true })
    , watch = subParser.addParser('watch', { addHelp: true })
    , deploy = subParser.addParser('deploy', { addHelp: true });

  generate.addArgument(['path'], { help: 'path to new project' });
  generate.addArgument(['-i', '--index'],  { help: 'path to index file' });
  generate.addArgument(['-e', '--blog'], { help: 'tumblr blog to use as context and to deploy to' });
  generate.addArgument(['-e', '--email'], { help: 'tumblr blog e-mail address' });
  generate.addArgument(['-p', '--password'], { help: 'tumblr blog password' });

  watch.addArgument(['--path'], { help: 'source path' });
  watch.addArgument(['-p', '--port'],  { help: 'port to run server' });
  watch.addArgument(['-i', '--index'],  { help: 'path to index file' });
  watch.addArgument(['-b', '--blog'],  { help: 'tumblr blog to use as context' });
  watch.addArgument(['-e', '--email'], { help: 'tumblr blog e-mail address' });
  watch.addArgument(['-p', '--password'], { help: 'tumblr blog password' });

  deploy.addArgument(['-i', '--index'], { help: 'theme to deploy' });
  deploy.addArgument(['-b', '--blog'],  { help: 'tumblr blog to deploy to' });
  deploy.addArgument(['-e', '--email'], { help: 'tumblr blog e-mail address' });
  deploy.addArgument(['-p', '--password'], { help: 'tumblr blog password' });
  deploy.addArgument(['-b', '--blog'],  { help: 'blog to deploy to' });

  this.args = parser.parseArgs();
}

Parse.prototype = {

  details: {
    version: pkg.version,
    description: pkg.description,
    addHelp: true
  },

  child_details: {
    title: 'children',
    dest: 'action'
  },

  exec: function () {
    (new Commands(process, this.args)).init();
  }

}

new Parse()
  .exec();
